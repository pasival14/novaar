import { Config as SVGOConfig } from "svgo";
import type { Program } from "estree";
export interface ToHastOptions {
    optimize?: boolean;
    svgoConfig?: SVGOConfig;
}
export declare const toHast: (svg: string, options?: ToHastOptions) => Promise<import("hast").Root>;
export interface ToEsTreeOptions extends ToHastOptions {
}
export declare const toEstree: (svg: string, options?: ToEsTreeOptions) => Promise<Program>;
export interface ToJsxOptions extends ToEsTreeOptions {
}
export declare const toJsx: (svg: string, options?: ToJsxOptions) => Promise<string>;
interface ToJsOptions extends ToEsTreeOptions {
    runtime?: "classic" | "automatic";
    importSource?: string;
    pragma?: string;
    pragmaFrag?: string;
    development?: boolean;
    filePath?: string;
}
export declare const toJs: (svg: string, options?: ToJsOptions) => Promise<string>;
export interface ToJsxComponentOptions extends ToEstreeComponentOptions {
}
export declare const toJsxComponent: (svg: string, options: ToJsxComponentOptions) => Promise<string>;
export interface ToJsComponentOptions extends ToJsOptions, ToEstreeComponentOptions {
}
export declare const toJsComponent: (svg: string, options?: ToJsComponentOptions) => Promise<string>;
interface ToEstreeComponentOptions extends ToEsTreeOptions {
    runtime?: "classic" | "automatic";
    pragma?: string;
    pragmaFrag?: string;
    importSource?: string;
    componentName?: string;
    passProps?: boolean;
    defaultExport?: boolean;
}
export declare const toEstreeComponent: (svg: string, options?: ToEstreeComponentOptions) => Promise<Program>;
export {};
